steps:
  # 🎯 TESTING: Plugin integration with secret-name parameter (FIXED plugin.yml!)
  - label: "🛠️ Bootstrap service account with flexible secret loading" 
    key: "bootstrap-sa"
    agents:
      queue: kubernetes
    plugins:
      - Mykematt/k8s-bootstrap#feature/pipeline-fixes:
          namespace: "default"
          service-account-name: "deployer-service-account"
          secret-name: "k8s_admin_kubeconfig"
          permissions:
            - deployments
            - pods
            - secrets
            - configmaps
            - services
    command: |
      echo "🎯 FLEXIBLE PLUGIN TEST: Using secret-name parameter!"
      echo "Plugin will load kubeconfig from Buildkite secret: k8s_admin_kubeconfig"
      
      echo "📦 Installing kubectl..."
      curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
      chmod +x kubectl
      export PATH="$PWD:$PATH"
      echo "✅ kubectl installed successfully"

  - label: "🚀 Deploy nginx application"
    key: "deploy-nginx"
    depends_on: "bootstrap-sa"
    agents:
      queue: "kubernetes"
    command: |
      echo "==== STEP 3: Deploying Application ===="
      echo "Downloading scoped kubeconfig artifact from Step 2..."
      buildkite-agent artifact download "kubeconfig-deployer-service-account.yaml" .
      
      export KUBECONFIG="kubeconfig-deployer-service-account.yaml"
      echo "Using scoped kubeconfig for deployment..."
      echo "First 200 chars of scoped kubeconfig:"
      head -c 200 kubeconfig-deployer-service-account.yaml
      echo "Applying Kubernetes manifests with limited permissions..."
      kubectl apply -f k8s/configmap.yaml
      kubectl apply -f k8s/deployment.yaml
      kubectl apply -f k8s/service.yaml
      echo "✅ Deployment completed successfully!"